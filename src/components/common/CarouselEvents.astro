---
interface Props {
  class?: string;
  images: string[]; // Asegúrate de que sea un array de rutas de imágenes estáticas
}
const { class: className, images } = Astro.props;
---

<div class:list={[className]} class='carousel overflow-hidden'>
  <div class='flex -ml-4'>
    {
      images.map((image: string, index: number) => (
        <div class='slide pl-4'>
          <img
            src={image}
            alt={`Imagen ${index + 1}`}
            class='w-full rounded-md aspect-square object-cover object-center shadow-xl'
            loading='lazy'
            decoding='async'
          />
        </div>
      ))
    }
  </div>
</div>

<style>
  .slide {
    --slide-items: 1;

    flex: 0 0 calc(100% / var(--slide-items));
    min-width: 0;

    @media (width >=768px) {
      --slide-items: 2;
    }

    @media (width >= 1024px) {
      --slide-items: 3;
    }

    &.stores {
      img {
        max-width: 250px;
        max-height: 100px;
        object-fit: contain;
      }

      @media (width >=768px) {
        --slide-items: 4;
      }

      @media (width >= 1024px) {
        --slide-items: 5;
      }
    }
  }
</style>

<script>
  import EmblaCarousel, { type EmblaOptionsType } from 'embla-carousel';
  import Autoplay from 'embla-carousel-autoplay';

  const AUTOPLAY_SPEED_IN_SECONDS = 4;

  const plugins = [
    Autoplay({
      delay: AUTOPLAY_SPEED_IN_SECONDS * 1000,
      stopOnInteraction: false,
    }),
  ];
  const emblaNodes = document.querySelectorAll('.carousel');
  const options: EmblaOptionsType = {
    align: 'start',
    loop: true,
    slidesToScroll: 'auto',
  };

  emblaNodes.forEach((carousel) => {
    EmblaCarousel(carousel as HTMLElement, options, plugins);
  });
</script>
